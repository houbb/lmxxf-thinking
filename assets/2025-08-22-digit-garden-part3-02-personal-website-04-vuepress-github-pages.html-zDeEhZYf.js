import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a,o as t}from"./app-BCUAwedN.js";const n={};function l(h,i){return t(),e("div",null,[...i[0]||(i[0]=[a(`<h1 id="vuepress-实际项目" tabindex="-1"><a class="header-anchor" href="#vuepress-实际项目"><span>vuepress 实际项目</span></a></h1><p>你可以直接在 <a href="https://github.com/houbb/lmxxf-thinking" target="_blank" rel="noopener noreferrer">https://github.com/houbb/lmxxf-thinking</a></p><p>直接下载这个项目，就是 vuepress 的，然后本地启动体验一下。</p><p>下一节我们会介绍如何在线部署</p><blockquote><p>在线体验，<a href="https://houbb.github.io/lmxxf-thinking/" target="_blank" rel="noopener noreferrer">https://houbb.github.io/lmxxf-thinking/</a></p></blockquote><p>那么这个部署是如何实现的呢？</p><p>我们需要用到 github-pages，免费部署。</p><h1 id="github-pages-部署实战" tabindex="-1"><a class="header-anchor" href="#github-pages-部署实战"><span>github-pages 部署实战</span></a></h1><h2 id="github-actions" tabindex="-1"><a class="header-anchor" href="#github-actions"><span>github actions</span></a></h2><p>我们可以利用 github actions 触发自动把我们的 markdown 博客编译为 html 静态网站。</p><p>触发脚本，参考：</p><blockquote><p><a href="https://github.com/houbb/lmxxf-thinking/blob/main/.github/workflows/deploy-docs.yml" target="_blank" rel="noopener noreferrer">.github/workflows/deploy-docs.yml</a></p></blockquote><p>我们只需要在自己的 vuepress 项目，相同目录也放一个 <code>.github/workflows/deploy-docs.yml</code>，内容不用改，每次提交 github 就可以触发编译。</p><h2 id="分支" tabindex="-1"><a class="header-anchor" href="#分支"><span>分支</span></a></h2><p>我们的部署脚本中</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">构建文档</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          NODE_OPTIONS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">--max_old_space_size=8192</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|-</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          npm run docs:build</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          &gt; src/.vuepress/dist/.nojekyll</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">部署文档</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">JamesIves/github-pages-deploy-action@v4</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          # 部署文档</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          branch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">gh-pages</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          folder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">src/.vuepress/dist</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>会把内容编译好放在 <code>gh-pages</code> 分支</p><h2 id="部署" tabindex="-1"><a class="header-anchor" href="#部署"><span>部署</span></a></h2><p>我们只需要在自己的 github 代码仓库，设置一下即可</p><p>【setting】=&gt;【Pages】，选择 <code>gh-pages</code> 分支，点击【save】保存即可。</p><figure><img src="https://houbb.github.io/lmxxf-thinking/assets/images/digit-garden/github-pages-setting.png" alt="github-pages-setting" tabindex="0" loading="lazy"><figcaption>github-pages-setting</figcaption></figure><p>稍微等待一会儿，就可以访问了。</p><h2 id="访问" tabindex="-1"><a class="header-anchor" href="#访问"><span>访问</span></a></h2><p>比如根据页面提示，我的博客地址是：</p><blockquote><p><a href="https://houbb.github.io/lmxxf-thinking/" target="_blank" rel="noopener noreferrer">https://houbb.github.io/lmxxf-thinking/</a></p></blockquote><h1 id="一、github-pages-是什么" tabindex="-1"><a class="header-anchor" href="#一、github-pages-是什么"><span>一、GitHub Pages 是什么？</span></a></h1><ol><li><p>定义<br> GitHub Pages（简称 GH Pages）是 GitHub 提供的 静态网站托管服务，可以直接将 GitHub 仓库中的静态内容（HTML、CSS、JS、Markdown 转 HTML 等）发布为网站。</p></li><li><p>特点</p><ul><li>免费：无需额外服务器和域名（使用 <code>github.io</code> 子域名）</li><li>静态托管：只支持静态内容（可以配合前端框架生成静态文件）</li><li>自动化部署：通过 push 到仓库即可更新网站</li><li>支持自定义域名：可以绑定自己的域名</li></ul></li><li><p>适用场景</p><ul><li>个人博客、技术文档、知识库</li><li>Markdown 写作生成的静态网站（如 VuePress、GitBook、Hexo）</li><li>作品展示、项目主页</li></ul></li></ol><hr><h1 id="二、工作原理" tabindex="-1"><a class="header-anchor" href="#二、工作原理"><span>二、工作原理</span></a></h1><ol><li><p>GitHub Pages 会监控仓库中的特定分支或目录：</p><ul><li>用户/组织网站：使用 <code>username.github.io</code> 仓库，部署 <code>main</code> 或 <code>master</code> 分支</li><li>项目网站：在任意仓库中使用 <code>gh-pages</code> 分支或 <code>/docs</code> 文件夹</li></ul></li><li><p>当推送静态文件到指定分支后，GitHub 自动生成网页：</p><ul><li>HTML/CSS/JS 直接渲染</li><li>Markdown 会先通过生成工具（如 VuePress、GitBook）转换为 HTML</li></ul></li><li><p>访问方式：</p><ul><li><p>默认 URL：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>https://用户名.github.io/</span></span>
<span class="line"><span>https://用户名.github.io/仓库名/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>可绑定自定义域名</p></li></ul></li></ol><hr><h1 id="三、github-pages-类型" tabindex="-1"><a class="header-anchor" href="#三、github-pages-类型"><span>三、GitHub Pages 类型</span></a></h1><table><thead><tr><th>类型</th><th>分支</th><th>URL</th><th>说明</th></tr></thead><tbody><tr><td>用户/组织网站</td><td>main/master</td><td><a href="https://username.github.io" target="_blank" rel="noopener noreferrer">https://username.github.io</a></td><td>一个账号一个站点</td></tr><tr><td>项目网站</td><td>gh-pages / docs</td><td><a href="https://username.github.io/repo" target="_blank" rel="noopener noreferrer">https://username.github.io/repo</a></td><td>每个仓库可生成一个项目站点</td></tr></tbody></table><hr><h1 id="四、github-pages-使用流程-静态网站" tabindex="-1"><a class="header-anchor" href="#四、github-pages-使用流程-静态网站"><span>四、GitHub Pages 使用流程（静态网站）</span></a></h1><ol><li><p>创建仓库</p><ul><li><p>名称：</p><ul><li>用户网站：<code>username.github.io</code></li><li>项目网站：任意仓库名</li></ul></li></ul></li><li><p>上传静态文件</p><ul><li>直接 push HTML、CSS、JS 文件</li><li>或使用 VuePress/GitBook 构建的静态文件（<code>dist</code> 或 <code>_book</code>）</li></ul></li><li><p>配置分支或目录</p><ul><li>用户网站：main/master 分支</li><li>项目网站：<code>gh-pages</code> 分支或 <code>docs</code> 文件夹</li></ul></li><li><p>启用 GitHub Pages</p><ul><li>仓库 → Settings → Pages</li><li>选择分支和目录 → 保存</li></ul></li><li><p>访问网站</p><ul><li><p>GitHub 会生成 URL，例如：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>https://username.github.io/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>等待几分钟即可访问</p></li></ul></li><li><p>自定义域名（可选）</p><ul><li>添加 <code>CNAME</code> 文件或在设置中填写域名</li><li>配置 DNS（CNAME / A 记录）</li></ul></li></ol><hr><h1 id="五、github-pages-与-vuepress-gitbook" tabindex="-1"><a class="header-anchor" href="#五、github-pages-与-vuepress-gitbook"><span>五、GitHub Pages 与 VuePress / GitBook</span></a></h1><ol><li>部署 VuePress</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 构建静态文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将 dist 文件夹 push 到 gh-pages 分支</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>部署 GitBook</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 构建静态文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gitbook</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># push _book 文件夹到 gh-pages 分支</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>GitHub Pages 只负责托管静态文件，不管生成工具，所以可以结合任何 SSG（静态网站生成器）使用。</p></blockquote><hr><h1 id="六、优势与注意事项" tabindex="-1"><a class="header-anchor" href="#六、优势与注意事项"><span>六、优势与注意事项</span></a></h1><p>优势：</p><ul><li>免费托管，低成本</li><li>简单易用，直接 push 即可更新</li><li>支持自定义域名</li><li>结合 Git 能轻松版本管理</li></ul><p>注意事项：</p><ul><li>仅支持静态内容（前端动态需借助 JS 或外部 API）</li><li>大量图片或文件可能占用仓库容量</li><li>需要 HTTPS 配置自定义域名</li></ul><hr><p>总结一句话：<br> GitHub Pages 是一个免费的静态网站托管服务，适合把个人博客、知识库、项目文档等生成的静态文件直接发布成网站，并支持自定义域名和版本管理。</p>`,51)])])}const o=s(n,[["render",l]]),d=JSON.parse('{"path":"/posts/digit-garden/2025-08-22-digit-garden-part3-02-personal-website-04-vuepress-github-pages.html","title":"如何发布个人网站 vuepress 结合 github-pages 免费部署","lang":"zh-CN","frontmatter":{"title":"如何发布个人网站 vuepress 结合 github-pages 免费部署","date":"2025-08-22T00:00:00.000Z","categories":["DigitGarden"],"tags":["digit-garden","note-tool","sh"],"published":true,"description":"vuepress 实际项目 你可以直接在 https://github.com/houbb/lmxxf-thinking 直接下载这个项目，就是 vuepress 的，然后本地启动体验一下。 下一节我们会介绍如何在线部署 在线体验，https://houbb.github.io/lmxxf-thinking/ 那么这个部署是如何实现的呢？ 我们需要用到...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何发布个人网站 vuepress 结合 github-pages 免费部署\\",\\"image\\":[\\"https://houbb.github.io/lmxxf-thinking/assets/images/digit-garden/github-pages-setting.png\\"],\\"datePublished\\":\\"2025-08-22T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-24T06:43:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://houbb.github.io/lmxxf-thinking/posts/digit-garden/2025-08-22-digit-garden-part3-02-personal-website-04-vuepress-github-pages.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"如何发布个人网站 vuepress 结合 github-pages 免费部署"}],["meta",{"property":"og:description","content":"vuepress 实际项目 你可以直接在 https://github.com/houbb/lmxxf-thinking 直接下载这个项目，就是 vuepress 的，然后本地启动体验一下。 下一节我们会介绍如何在线部署 在线体验，https://houbb.github.io/lmxxf-thinking/ 那么这个部署是如何实现的呢？ 我们需要用到..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://houbb.github.io/lmxxf-thinking/assets/images/digit-garden/github-pages-setting.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-24T06:43:27.000Z"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:tag","content":"note-tool"}],["meta",{"property":"article:tag","content":"digit-garden"}],["meta",{"property":"article:published_time","content":"2025-08-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-24T06:43:27.000Z"}]]},"git":{"createdTime":1755962588000,"updatedTime":1756017807000,"contributors":[{"name":"bbhou","username":"bbhou","email":"1557740299@qq.com","commits":2,"url":"https://github.com/bbhou"}]},"readingTime":{"minutes":3.72,"words":1117},"filePathRelative":"posts/digit-garden/2025-08-22-digit-garden-part3-02-personal-website-04-vuepress-github-pages.md","excerpt":"\\n<p>你可以直接在 <a href=\\"https://github.com/houbb/lmxxf-thinking\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/houbb/lmxxf-thinking</a></p>\\n<p>直接下载这个项目，就是 vuepress 的，然后本地启动体验一下。</p>\\n<p>下一节我们会介绍如何在线部署</p>\\n<blockquote>\\n<p>在线体验，<a href=\\"https://houbb.github.io/lmxxf-thinking/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://houbb.github.io/lmxxf-thinking/</a></p>\\n</blockquote>","autoDesc":true}');export{o as comp,d as data};
